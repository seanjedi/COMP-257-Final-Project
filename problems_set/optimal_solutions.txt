Getting the optimal results of: problem_set10
	Optimal value = 128
	Optimal weight: 93
	Packed items: [4, 5, 6, 7, 8, 9]
	Packed_weights: [60, 17, 3, 2, 10, 1]
	Packed_values: [63, 17, 16, 10, 8, 14]


Getting the optimal results of: problem_set15
	Optimal value = 169
	Optimal weight: 143
	Packed items: [6, 9, 11, 12, 13, 14]
	Packed_weights: [92, 1, 11, 17, 3, 19]
	Packed_values: [95, 15, 17, 13, 9, 20]


Getting the optimal results of: problem_set20
	Optimal value = 246
	Optimal weight: 200
	Packed items: [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
	Packed_weights: [109, 5, 17, 16, 7, 12, 10, 4, 7, 11, 2]
	Packed_values: [119, 20, 3, 12, 14, 20, 19, 9, 2, 16, 12]


Getting the optimal results of: problem_set25
	Optimal value = 216
	Optimal weight: 200
	Packed items: [12, 13, 14, 15, 16, 18, 19, 20, 22, 24]
	Packed_weights: [106, 8, 3, 14, 20, 5, 18, 17, 6, 3]
	Packed_values: [121, 4, 19, 6, 15, 3, 14, 20, 3, 11]


Getting the optimal results of: problem_set30
	Optimal value = 331
	Optimal weight: 285
	Packed items: [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
	Packed_weights: [165, 3, 2, 15, 2, 6, 16, 7, 8, 9, 15, 7, 9, 6, 9, 6]
	Packed_values: [173, 1, 15, 2, 16, 19, 18, 1, 5, 19, 18, 4, 10, 10, 16, 4]


Getting the optimal results of: problem_set50
	Optimal value = 977
	Optimal weight: 1000
	Packed items: [12, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98]
	Packed_weights: [517, 16, 6, 1, 2, 14, 9, 3, 5, 8, 16, 17, 10, 13, 19, 6, 6, 18, 11, 13, 6, 10, 18, 12, 10, 3, 4, 17, 1, 5, 18, 18, 18, 9, 12, 9, 3, 17, 13, 16, 5, 10, 2, 15, 19, 20]
	Packed_values: [529, 13, 8, 11, 2, 6, 7, 2, 18, 18, 19, 4, 12, 6, 12, 2, 3, 12, 15, 4, 7, 19, 15, 9, 8, 2, 12, 8, 9, 14, 4, 9, 8, 20, 5, 5, 13, 13, 20, 16, 9, 13, 7, 6, 10, 13]


Getting the optimal results of: problem_set200
	Optimal value = 1704
	Optimal weight: 1498
	Packed items: [4, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 183, 184, 186, 187, 190, 191, 192, 193, 195, 196, 198, 199]
	Packed_weights: [766, 2, 1, 12, 5, 7, 18, 2, 14, 9, 10, 1, 5, 6, 1, 1, 1, 11, 10, 2, 3, 1, 8, 14, 17, 8, 10, 10, 11, 6, 13, 7, 6, 1, 9, 8, 4, 14, 15, 5, 6, 1, 6, 17, 11, 10, 6, 3, 11, 8, 19, 19, 9, 15, 9, 6, 12, 3, 19, 19, 6, 12, 17, 14, 11, 5, 3, 16, 19, 3, 13, 8, 12, 19, 19, 18, 17, 20, 3]
	Packed_values: [784, 20, 16, 20, 9, 6, 13, 7, 16, 5, 18, 2, 5, 17, 6, 6, 20, 6, 19, 6, 16, 6, 8, 12, 12, 13, 9, 9, 8, 13, 8, 8, 6, 18, 10, 10, 17, 11, 19, 14, 8, 12, 10, 15, 18, 19, 5, 18, 5, 19, 14, 10, 15, 7, 6, 12, 6, 15, 11, 19, 19, 11, 12, 8, 19, 12, 12, 18, 8, 14, 7, 7, 17, 13, 20, 9, 8, 15, 3]


Getting the optimal results of: problem_set500
	Optimal value = 2820
	Optimal weight: 2000
	Packed items: [109, 250, 252, 253, 254, 256, 258, 259, 261, 262, 266, 268, 271, 273, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 301, 302, 307, 308, 312, 313, 314, 315, 316, 317, 322, 324, 326, 329, 332, 333, 335, 336, 337, 339, 340, 342, 345, 346, 348, 350, 351, 354, 356, 360, 362, 364, 366, 367, 369, 370, 374, 375, 376, 378, 382, 383, 384, 386, 388, 389, 391, 392, 393, 398, 399, 400, 401, 402, 411, 415, 416, 419, 421, 422, 424, 425, 428, 429, 430, 431, 432, 434, 437, 439, 443, 445, 447, 450, 454, 463, 464, 468, 469, 470, 473, 476, 478, 481, 485, 486, 490, 491, 493, 495, 496, 499]
	Packed_weights: [1021, 11, 15, 6, 3, 3, 2, 4, 5, 19, 10, 7, 2, 8, 2, 5, 2, 12, 4, 20, 9, 6, 9, 5, 5, 3, 5, 2, 9, 10, 10, 20, 10, 2, 3, 8, 9, 12, 17, 6, 13, 8, 8, 12, 11, 14, 1, 16, 3, 9, 3, 6, 11, 2, 2, 3, 13, 4, 6, 3, 6, 6, 10, 4, 18, 2, 11, 5, 6, 12, 13, 10, 11, 16, 2, 2, 12, 7, 5, 3, 2, 11, 18, 2, 12, 3, 12, 8, 15, 6, 5, 1, 16, 9, 13, 13, 8, 2, 2, 1, 18, 8, 4, 8, 14, 10, 7, 19, 13, 8, 2, 9, 5, 5, 3, 2, 9, 18, 14, 10, 8, 17]
	Packed_values: [1039, 17, 19, 9, 8, 10, 12, 18, 10, 20, 20, 12, 16, 16, 10, 8, 6, 20, 8, 20, 19, 19, 15, 16, 15, 16, 19, 10, 12, 17, 19, 20, 14, 13, 5, 14, 13, 20, 19, 16, 16, 20, 20, 20, 15, 18, 20, 18, 16, 13, 10, 15, 19, 8, 7, 15, 20, 19, 18, 16, 17, 8, 17, 10, 20, 14, 14, 17, 9, 14, 20, 18, 11, 19, 4, 9, 15, 8, 15, 13, 7, 11, 18, 19, 14, 16, 13, 9, 16, 13, 20, 15, 18, 16, 14, 13, 17, 3, 11, 6, 20, 11, 10, 15, 18, 12, 8, 20, 19, 10, 10, 19, 20, 10, 20, 16, 20, 18, 17, 20, 15, 19]


Getting the optimal results of: problem_set1000
	Optimal value = 3504
	Optimal weight: 2000
	Packed items: [501, 502, 503, 505, 506, 507, 513, 515, 521, 523, 524, 525, 527, 528, 529, 530, 536, 537, 539, 540, 544, 548, 549, 551, 552, 553, 555, 556, 557, 559, 560, 563, 566, 569, 570, 571, 573, 574, 576, 577, 579, 582, 584, 585, 586, 592, 597, 598, 599, 602, 603, 604, 606, 607, 608, 613, 615, 616, 621, 623, 624, 626, 627, 630, 634, 636, 638, 639, 640, 641, 643, 644, 647, 648, 650, 652, 653, 656, 660, 661, 662, 663, 664, 665, 667, 670, 674, 676, 679, 682, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 712, 713, 714, 716, 721, 723, 725, 728, 729, 730, 733, 734, 736, 738, 739, 740, 741, 743, 747, 749, 750, 751, 753, 754, 755, 757, 758, 760, 762, 764, 765, 768, 771, 772, 773, 774, 775, 778, 779, 781, 785, 787, 789, 794, 795, 797, 798, 799, 800, 806, 807, 809, 811, 813, 815, 819, 822, 824, 826, 827, 830, 833, 838, 841, 842, 843, 844, 845, 846, 847, 851, 854, 856, 857, 858, 860, 862, 866, 867, 868, 870, 873, 874, 875, 876, 878, 881, 882, 883, 884, 886, 892, 893, 895, 896, 897, 898, 899, 900, 901, 905, 906, 907, 908, 909, 912, 913, 917, 919, 920, 921, 923, 924, 927, 928, 929, 930, 931, 935, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 953, 955, 959, 966, 969, 970, 971, 972, 973, 974, 978, 981, 985, 986, 987, 988, 992, 996, 997, 999]
	Packed_weights: [5, 1, 3, 8, 17, 15, 3, 10, 19, 18, 11, 1, 16, 2, 1, 9, 7, 18, 4, 1, 4, 10, 12, 1, 13, 10, 12, 6, 2, 4, 3, 2, 10, 17, 6, 13, 1, 3, 12, 6, 6, 6, 4, 9, 10, 16, 16, 2, 18, 9, 1, 8, 4, 14, 18, 3, 4, 3, 13, 15, 14, 5, 4, 2, 12, 3, 1, 16, 2, 5, 18, 4, 13, 9, 11, 5, 2, 14, 11, 13, 18, 5, 7, 7, 4, 13, 8, 7, 4, 11, 12, 13, 2, 6, 13, 3, 13, 19, 1, 17, 12, 8, 4, 10, 6, 2, 11, 3, 7, 6, 7, 14, 6, 7, 3, 8, 4, 10, 2, 5, 1, 10, 2, 3, 11, 3, 2, 2, 18, 3, 11, 9, 4, 3, 8, 6, 2, 17, 1, 3, 6, 6, 7, 8, 4, 5, 10, 4, 5, 9, 5, 4, 1, 6, 2, 4, 3, 8, 6, 13, 14, 7, 20, 5, 2, 8, 4, 9, 5, 17, 14, 5, 20, 5, 13, 13, 1, 8, 3, 8, 12, 1, 17, 11, 2, 15, 1, 2, 18, 2, 9, 9, 10, 1, 14, 14, 15, 6, 4, 1, 17, 3, 10, 8, 15, 4, 8, 12, 4, 3, 4, 5, 9, 12, 10, 1, 12, 6, 15, 15, 18, 8, 8, 4, 5, 4, 13, 8, 20, 15, 1, 10, 3, 13, 2, 1, 12, 1, 1, 13, 7, 7, 5, 9, 11, 8, 5, 11, 1, 10, 2, 2, 3, 15, 14]
	Packed_values: [15, 2, 10, 16, 16, 14, 20, 15, 19, 20, 16, 1, 17, 9, 1, 19, 20, 20, 4, 16, 15, 10, 19, 3, 19, 18, 20, 18, 17, 11, 4, 11, 15, 20, 20, 20, 10, 20, 16, 7, 15, 10, 15, 15, 16, 16, 19, 17, 19, 18, 1, 20, 5, 17, 18, 6, 6, 19, 13, 17, 15, 7, 6, 3, 20, 19, 10, 20, 11, 5, 20, 10, 15, 14, 14, 5, 8, 14, 11, 17, 20, 11, 10, 18, 14, 12, 12, 11, 18, 14, 20, 15, 19, 20, 15, 6, 18, 19, 20, 20, 12, 13, 17, 16, 15, 4, 15, 15, 15, 18, 20, 16, 9, 8, 8, 18, 13, 13, 11, 10, 13, 18, 10, 13, 14, 8, 20, 6, 20, 9, 12, 14, 16, 15, 14, 18, 5, 17, 16, 15, 14, 7, 10, 10, 5, 12, 11, 11, 11, 14, 5, 8, 8, 14, 11, 16, 20, 12, 10, 19, 17, 19, 20, 13, 7, 10, 8, 9, 10, 18, 20, 18, 19, 16, 13, 19, 13, 12, 8, 20, 17, 7, 19, 12, 10, 14, 3, 14, 20, 3, 16, 16, 10, 1, 15, 19, 16, 7, 9, 14, 19, 17, 12, 14, 15, 15, 14, 15, 14, 11, 16, 20, 18, 12, 15, 2, 12, 18, 20, 14, 19, 18, 18, 10, 6, 9, 18, 13, 20, 17, 14, 16, 9, 13, 15, 14, 16, 4, 14, 17, 16, 8, 11, 20, 20, 18, 20, 16, 20, 13, 12, 4, 18, 18, 18]


